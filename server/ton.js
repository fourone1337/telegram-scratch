const { TonClient, WalletContractV4, internal } = require('@ton/ton');
const { mnemonicToPrivateKey } = require('@ton/crypto');
const { Address, toNano } = require('@ton/core');
require('dotenv').config();

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const SECRET_KEY = process.env.SECRET_KEY; // –ú–Ω–µ–º–æ–Ω–∏–∫–∞
const TONCENTER_API_KEY = process.env.TONCENTER_API_KEY;

if (!SECRET_KEY || !TONCENTER_API_KEY) {
  throw new Error('‚ùå SECRET_KEY –∏–ª–∏ TONCENTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ TON ‚Äî —É–∂–µ —Å –≥–æ—Ç–æ–≤—ã–º –∞–¥—Ä–µ—Å–æ–º, —Å—É–º–º–æ–π –∏ —É—Å–ª–æ–≤–∏–µ–º
async function sendTonRewardIfWin({ address, emojis, reward }) {
  const winning = checkWin(emojis); // üé∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞ –ø–æ —ç–º–æ–¥–∂–∏
  if (!winning || reward <= 0) {
    console.log('‚ùå –ù–µ –≤—ã–∏–≥—Ä–∞–ª ‚Äî TON –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.');
    return;
  }

  const toncenterEndpoint = `https://toncenter.com/api/v2/jsonRPC?api_key=${TONCENTER_API_KEY}`;
  const client = new TonClient({ endpoint: toncenterEndpoint });

  const keyPair = await mnemonicToPrivateKey(SECRET_KEY.split(' '));
  const wallet = WalletContractV4.create({ workchain: 0, publicKey: keyPair.publicKey });
  const walletContract = client.open(wallet);

  const recipientAddress = Address.parse(address);
  const amountToSend = toNano(reward.toString());

  console.log(`üéØ –ü–æ–±–µ–¥–∞! –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${reward} TON –Ω–∞ ${recipientAddress.toString()}`);

  await walletContract.sendTransfer({
    seqno: await walletContract.getSeqno(),
    secretKey: keyPair.secretKey,
    messages: [internal({
      to: recipientAddress,
      value: amountToSend,
      body: 'üéÅ Scratch Lottery reward',
    })],
    sendMode: 3,
  });

  console.log('‚úÖ TON –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ 3 —ç–º–æ–¥–∂–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç
function checkWin(emojis) {
  if (typeof emojis !== 'string' || emojis.length < 3) return false;
  const symbols = [...emojis];
  return symbols.every(s => s === symbols[0]);
}

module.exports = { sendTonRewardIfWin };
