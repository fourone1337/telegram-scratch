const TonWeb = require('tonweb');                // v0.0.66+
require('dotenv').config();

const { TONCENTER_API_KEY, SECRET_KEY } = process.env;
if (!SECRET_KEY) throw new Error('‚ùå SECRET_KEY –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ .env');

const provider = new TonWeb.HttpProvider(
  'https://toncenter.com/api/v2/jsonRPC',
  { apiKey: TONCENTER_API_KEY }
);
const tonweb = new TonWeb(provider);

// ---------- 1. –°–æ–∑–¥–∞—ë–º –∫–æ—à–µ–ª—ë–∫ strictly v4R2 ----------
const keyPair = TonWeb.utils.keyPairFromSeed(Buffer.from(SECRET_KEY, 'base64'));
const WalletV4R2 = TonWeb.wallet.all.v4R2;       // <-- —è–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç
const wallet   = new WalletV4R2(provider, {
  publicKey: keyPair.publicKey,
  wc: 0                                          // 0-–π workchain
});
// ------------------------------------------------------

async function deployWalletIfNeeded() {
  const address = await wallet.getAddress();
  const info    = await provider.getAddressInfo(address.toString());
  if (info?.state === 'active') return;          // —É–∂–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç

  console.log('üì¶ –ö–æ—à–µ–ª—ë–∫ –Ω–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç ‚Äî –¥–µ–ø–ª–æ–∏–º‚Ä¶');
  await wallet.deploy({ secretKey: keyPair.secretKey }).send();
  console.log('‚úÖ –ö–æ—à–µ–ª—ë–∫ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç.');
}

// ---------- –æ—Ç–ø—Ä–∞–≤–∫–∞ TON -----------------------------
async function sendTonReward(toAddress, amountTon) {
  await deployWalletIfNeeded();

  // –µ—Å–ª–∏ –∫–æ—à–µ–ª—ë–∫ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç ‚Üí seqno = 0
  let seqno = 0;
  try { seqno = await wallet.methods.seqno().call(); } catch { /* ignore */ }

  const amountNano = TonWeb.utils.toNano(amountTon.toString());
  console.log(`üöÄ –ü–µ—Ä–µ–≤–æ–¥ ${amountTon} TON –Ω–∞ ${toAddress}‚Ä¶`);

  await wallet.methods.transfer({
    secretKey:   keyPair.secretKey,
    toAddress,
    amount:      amountNano,
    seqno,
    payload:     null,
    bounce:      false,          // –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –ª—É—á—à–µ off
    sendMode:    3               // pay gas separately, ignore errors
  }).send();

  console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
}
// ------------------------------------------------------

module.exports = { sendTonReward };
