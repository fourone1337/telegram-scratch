// ton.js  (–∑–∞–º–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª)
const TonWeb = require('tonweb');
require('dotenv').config();            // ‚Üê —á—Ç–æ–±—ã .env –ø–æ–¥—Ç—è–Ω—É–ª—Å—è –¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

const TONCENTER_API_KEY = process.env.TONCENTER_API_KEY;
const SECRET_KEY         = process.env.SECRET_KEY;
if (!SECRET_KEY) { throw new Error('‚ùå SECRET_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env'); }

const provider = new TonWeb.HttpProvider('https://toncenter.com/api/v2/jsonRPC', { apiKey: TONCENTER_API_KEY });
const tonweb   = new TonWeb(provider);

const keyPair  = TonWeb.utils.keyPairFromSeed(Buffer.from(SECRET_KEY, 'base64'));

// ‚ö†  V3-–∫–æ—à–µ–ª—ë–∫ –ø—Ä–æ—â–µ –∏ –¥–µ—à–µ–≤–ª–µ, –µ—Å–ª–∏ –ø–ª–∞–≥–∏–Ω—ã –Ω–µ –Ω—É–∂–Ω—ã
const wallet = tonweb.wallet.create({
  publicKey : keyPair.publicKey,
  wc        : 0,
  type      : 'v3R2'            // ‚Üê –±—ã–ª–æ v4R2
});

// 1. –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–æ—à–µ–ª—ë–∫ (–µ—Å–ª–∏ —ç—Ç–æ –µ—â—ë –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å)
async function deployWalletIfNeeded() { /* ‚Ä¶–∫–∞–∫ –±—ã–ª–æ‚Ä¶ */ }

// 2. –û—Ç–ø—Ä–∞–≤–∫–∞ TON
async function sendTonReward(toAddress, amountTon) {
  await deployWalletIfNeeded();

  const seqno       = await wallet.methods.seqno().call();
  const amountNano  = TonWeb.utils.toNano(amountTon.toString());
  const validUntil  = Math.floor(Date.now() / 1000) + 600;   // +10 –º–∏–Ω—É—Ç, —Å–º. —á–µ–∫-–ª–∏—Å—Ç

  console.log(`üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${amountTon} TON –Ω–∞ ${toAddress}`);

  await wallet.methods.transfer({
    secretKey : keyPair.secretKey,
    toAddress,
    amount    : amountNano,
    seqno,
    validUntil,                       // ‚Üê –Ω–æ–≤–æ–µ –ø–æ–ª–µ
    payload   : null,
    sendMode  : 3                     // –∫–æ—à–µ–ª—ë–∫ –ø–ª–∞—Ç–∏—Ç –≥–∞–∑ + –≤–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
  }).send();
}

module.exports = { sendTonReward };
